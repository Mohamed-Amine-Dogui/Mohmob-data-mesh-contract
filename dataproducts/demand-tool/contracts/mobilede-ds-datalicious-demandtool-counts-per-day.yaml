dataContractSpecification: "v1.0"
metadata:
  contractName: "Counts Per Day"
  contractId: "mobilede-ds-datalicious-demandtool-counts-per-day"
  productId: "demand-tool"
  version: "1.0.0"
  startTime: 2024-03-20
  access: https://coda.io/d/Data-Strategy_d09EgYAxEQa/Big-Query_suTNy#_luC3Q
  description: > 
    Counts per day gets the counts per day that an ad had, per demand type. 
    The given `ad__sellerid` contains information about the seller id or customer id. 
    You can also use the ad__id, to identify an ad.
output:
  storage:
    platform: gcp
    system: bigquery
    projectId: mo-data-lake-prod-k4pi
    dataset: demand
    table: dealer_event_counts_deduplicated
    view: event_counts_per_day
model:
  containsPII: true
  format: avro
  schema: >
    {
      "name": "CountsPerDay",
      "type": "record",
      "fields" : [
        { "name": "date",
          "type": ["null",
            {
              "type": "string",
              "logicalType": "date"
            }
          ], "isPII": false, "doc": "date for the count.", "example": "2024-01-01"},
        {"name": "ad__sellerid", "type": ["null", "string"], "isPII": false, "doc": "Seller id.", "default": null, "example": "1234"},
        {"name": "ad__id", "type": ["null", "string"], "isPII": false, "doc": "Id of the Ad.", "default": null, "example": "4321"},
        {"name": "ci__name", "type": ["null", "string"], "isPII": false, "doc": "Normalized and sanitized application name, e.g. de.mobile.android.app, see m.mobile.de/svc/api-docs/api.html for a list of possible values.", "default": null, "example": "de.mobile.android.app"},
        {"name": "publisher", "type": ["null", "string"], "isPII": false, "doc": "publisher of the ad, version 1.", "default": null, "example": "SITE-ES"},
        {"name": "publisher_wm", "type": ["null", "string"], "isPII": false, "doc": "publisher of the ad, version 2.", "default": null, "example": "SITE-ES"},
        {"name": "namespace", "type": ["null", "string"], "isPII": false, "doc": "dataset and event name.", "default": null, "example": "parking_events.ParkingCreate"},
        {"name": "demand_type", "type": ["null", "string"], "isPII": false, "doc": "Demand type based on the namespace. Possible values are: ad_view, parking, printout, precall, postcall, email_contact.", "default": null, "example": "parking"},
        {"name": "is_akamaibot", "type": ["null", "boolean"], "isPII": false, "doc": "true if it's a bot, false if not.", "default": null, "example": false},
        {"name": "feature", "type": ["null", "string"], "isPII": false, "doc": "referrer indicating the place of the ad in the page. Only used for some ad_view demand type.", "default": null, "example": "eyeCatcher"},
        {"name": "event_count", "type": ["null", "int"], "isPII": false, "doc": "Number of dealer events for the given date, sellerid, ci__name and demand_type..", "default": null, "example": 42},
        {"name": "last_updated", "type": ["null", {"logicalType": "timestamp-column","type": "string"}], "isPII": false, "doc": "Last time the count was calculated.", "default": null, "example": "2023-05-07 19:37:10.411000 UTC"}
      ]
    }
slas:
  - property: frequency
    value: "15"
    unit: minute # every 15 minutes
inputs:
  - storage:
      platform: aws
      system: kafka
      broker: mdeproduction
      topic: ad_contact_events
      link: https://datahub.mpi-internal.com/data-discovery-and-exploration/catalog/datasets/urn:li:dataset:(urn:li:dataPlatform:kafka,mdeproduction.ad_contact_events,PROD)/cost-&-usage
  - storage:
      platform: aws
      system: kafka
      broker: mdeproduction
      topic: search_api_events
      link: https://datahub.mpi-internal.com/data-discovery-and-exploration/catalog/datasets/urn:li:dataset:(urn:li:dataPlatform:kafka,mdeproduction.search_api_events,PROD)/cost-&-usage
  - storage:
      platform: aws
      system: kafka
      broker: mdeproduction
      topic: freespee_call_events
      link: https://datahub.mpi-internal.com/data-discovery-and-exploration/catalog/datasets/urn:li:dataset:(urn:li:dataPlatform:kafka,mdeproduction.freespee_call_events,PROD)/cost-&-usage
  - storage:
      platform: aws
      system: kafka
      broker: mdeproduction
      topic: dealer_events
      link: https://datahub.mpi-internal.com/data-discovery-and-exploration/catalog/datasets/urn:li:dataset:(urn:li:dataPlatform:kafka,mdeproduction.dealer_events,PROD)/cost-&-usage
  - storage:
      platform: aws
      system: kafka
      broker: mdeproduction
      topic: ad_view_events
      link: https://datahub.mpi-internal.com/data-discovery-and-exploration/catalog/datasets/urn:li:dataset:(urn:li:dataPlatform:kafka,mdeproduction.ad_view_events,PROD)/cost-&-usage
  - storage:
      platform: aws
      system: kafka
      broker: mdeproduction
      topic: parking_events
      link: https://datahub.mpi-internal.com/data-discovery-and-exploration/catalog/datasets/urn:li:dataset:(urn:li:dataPlatform:kafka,mdeproduction.parking_events,PROD)/cost-&-usage